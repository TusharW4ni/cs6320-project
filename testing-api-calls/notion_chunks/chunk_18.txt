last_edited_by canâ€™t be updated. Refer to the example response objects below. Example last_edited_by page property value as returned in a GET page request JSON { "Last edited by column name": { "id": "uGNN", "type": "last_edited_by", "last_edited_by": { "object": "user", "id": "9188c6a5-7381-452f-b3dc-d4865aa89bdf", "name": "Test Integration", "avatar_url": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/3db373fe-18f6-4a3c-a536-0f061cb9627f/leplane.jpeg", "type": "bot", "bot": {} } } } Last edited time Field Type Description Example value last_edited_time string ( ISO 8601 date and time) The date and time that the page was last edited. The last_edited_time value canâ€™t be updated. "2022-10-12T16:34:00.000Z" Example last_edited_time page property value as returned in a GET page request JSON { "Last edited time": { "id": "%3Defk", "type": "last_edited_time", "last_edited_time": "2023-02-24T21:06:00.000Z" } } Multi-select If the type of a page property value is "multi_select" , then the property value contains a "multi_select" array with the following fields: Field Type Description Example value color string (enum) Color of the option. Possible "color" values are: - blue - brown - default - gray - green - orange - pink" - "purple - red - yellow Defaults to default . The color value canâ€™t be updated via the API. "red" id string The ID of the option. You can use id or name to update a multi-select property. "b3d773ca-b2c9-47d8-ae98-3c2ce3b2bffb" name string The name of the option as it appears in Notion. If the multi-select database property does not yet have an option by that name, then the name will be added to the database schema if the integration also has write access to the parent database. Note: Commas ( "," ) are not valid for select values. "JavaScript" Example properties body param for a POST or PATCH page request that creates or updates a multi_select page property value JSON { "properties": { "Programming language": { "multi_select": [ { "name": "TypeScript" }, { "name": "Python" } ] } } } Example multi_select page property value as returned in a GET page request JSON { "Programming language": { "id": "QyRn", "name": "Programming language", "type": "multi_select", "multi_select": [ { "id": "tC;=", "name": "TypeScript", "color": "purple" }, { "id": "e4413a91-9f84-4c4a-a13d-5b4b3ef870bb", "name": "JavaScript", "color": "red" }, { "id": "fc44b090-2166-40c8-8c58-88f2d8085ec0", "name": "Python", "color": "gray" } ] } } ðŸ“˜ If you want to add a new option to a multi-select property via the Update page or Update database endpoint, then your integration needs write access to the parent database. Number Field Type Description Example value number number A number representing some value. 1234 Example properties body param for a POST or PATCH page request that creates or updates a number page property value JSON { "properties": { "Number of subscribers": { "number": 42 } } } Example number page property value as returned in a GET page request JSON { "Number of subscribers": { "id": "WPj%5E", "name": "Number of subscribers", "type": "number", "number": { "format": "number" } } } People Field Type Description Example value people array of user objects An array of user objects. Refer to the example response objects below. Example properties body param for a POST or PATCH page request that creates or updates a people page property value JSON { "properties": { "Stakeholders": { "people": [{ "object": "user", "id": "c2f20311-9e54-4d11-8c79-7398424ae41e" }] } } } Example people page property value as returned in a GET page request JSON { "Stakeholders": { "id": "%7BLUX", "type": "people", "people": [ { "object": "user", "id": "c2f20311-9e54-4d11-8c79-7398424ae41e", "name": "Kimberlee Johnson", "avatar_url": null, "type": "person", "person": { "email": " [email protected] " } } ] } } ðŸ“˜ The Retrieve a page endpoint canâ€™t be guaranteed to return more than 25 people per people page property.